# Define the compiler
CC = gcc

# Define compiler flags
CFLAGS = -lm

# Define source code directory
SRC_DIR = src

# Define output directory
OUTPUT_DIR = compilados

# Define data directories
DATA_DIR = vet
RESULTS_DIR = resultados

# List of source files
SRC_FILES := $(wildcard $(SRC_DIR)/*.c)

# Generate object file names from source files
OBJ_FILES := $(patsubst $(SRC_DIR)/%.c, $(OUTPUT_DIR)/%.o, $(SRC_FILES))

# Main targets
all: cosseno_vetores banco

cosseno_vetores: $(OUTPUT_DIR)/cosseno_vetores

banco: $(RESULTS_DIR)/banco.txt

vetorizador: $(OUTPUT_DIR)/grava_vetores

# Pattern rule for compiling .c files to .o files
$(OUTPUT_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -o $@ $<

# Pattern rule for linking executables
$(OUTPUT_DIR)/%: $(OBJ_FILES)
	$(CC) $(CFLAGS) -o $@ $^

# Generating banco.txt
$(RESULTS_DIR)/banco.txt: banco.sh
	./scripts/banco.sh > $@

# Abstract rule for executing scripts
define run_script
	./scripts/$(1)
	mv log.txt $(RESULTS_DIR)
endef

# Clear target for cleaning up
clear:
	rm -rf $(OUTPUT_DIR) $(RESULTS_DIR) $(DATA_DIR) cosseno.txt

# Clean target
clean: clear

.PHONY: all cosseno_vetores banco vetorizador clear clean
